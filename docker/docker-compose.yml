version: '3.1'

services:
  app:
    image: 'rest:latest'
    build:
      context: .
      dockerfile: Dockerfile
    ports:
        - "8181:8181"
    depends_on:
        - db
    environment:
        - SERVER_PORT= 8181
        - SPRING_DATASOURCE_URL=jdbc:postgresql://db/rest_api
  db:
    image: 'postgres'
    container_name: db
    expose:
      - '5432'
    environment:
      - POSTGRES_DB=rest_api
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    healthcheck:
      test: [ "CMD", "nc", "-vz", "localhost", "2181" ]
      interval: 10s
      timeout: 3s
      retries: 3
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - 29092:29092
    healthcheck:
      test: [ "CMD", "nc", "-vz", "localhost", "9092" ]
      interval: 10s
      timeout: 3s
      retries: 3
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: OUTSIDE://:29092,INTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: OUTSIDE://localhost:29092,INTERNAL://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
